# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–¥–∞—á–µ–π –±—ã–ª–æ –ø–æ–∫–∞–∑–∞—Ç—å, –Ω–∞ —á—Ç–æ —Å–ø–æ—Å–æ–±–Ω—ã –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, –ø–æ—ç—Ç–æ–º—É –Ω–∞–¥ –ª–æ–≥–∏–∫–æ–π –∑–¥–µ—Å—å —è –Ω–µ –æ—á–µ–Ω—å –∑–∞–ø–∞—Ä–∏–≤–∞–ª—Å—è,
# –∏ –æ—Å–Ω–æ–≤–Ω—É—é —Ä–∞–±–æ—Ç—É –¥–µ–ª–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è eval()
import eel
from math import *
from win32api import GetSystemMetrics

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ/–∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
miss_list = ['+', '-', '/', '‚àö', '*'] # –°–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Å—Ç–∞–≤–ª–µ–Ω—ã –ø–æ –æ—à–∏–±–∫–µ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏


@eel.expose
def equals(input, is_radian_active):

    print(input, is_radian_active) # –¢–µ—Å—Ç–æ–≤—ã–π –≤—ã–≤–æ–¥ input

    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ/–∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    output = ''
    brackets = 0
    previous_sym = ''
    trigonometry = 0

    # –ó–∞—â–∏—Ç–∞ –æ—Ç "–¥—É—Ä–∞–∫–∞"
    if '/0' in input: # –ò–∑–±–µ–∂–∞–Ω–∏–µ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å
        return '–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å???'

    if input[-2] in miss_list: # –ò–∑–±–µ–∂–∞–Ω–∏–µ –ª–∏—à–Ω–µ–≥–æ —Å–∏–º–≤–æ–ª–∞ –Ω–∞ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏
        input = input[0:-2]


    # –ó–∞–º–µ–Ω–∞ —Å–∏–º–≤–æ–ª–æ–≤ –º–∞—Ç. –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ python math
    input = input.replace('¬≤','**2') # –ó–∞–º–µ–Ω–∞ –≤—Ç–æ—Ä–æ–π —Å—Ç–µ–ø–µ–Ω–∏
    input = input.replace('œÄ',"pi")  # –ó–∞–º–µ–Ω–∞ œÄ —Å–∏–º–≤–æ–ª–∞ 
    if not is_radian_active: # –ï—Å–ª–∏ —Ä–µ–∂–∏–º —Ä–∞–¥–∏–∞–Ω –æ—Ç–∫–ª—é—á–µ–Ω, –≥—Ä–∞–¥—É—Å—ã –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Ä–∞–¥–∏–∞–Ω—ã
        input = input.replace('cos(',"cos(pi/180*")
        input = input.replace('sin(',"sin(pi/180*")
        input = input.replace('tan(',"tan(pi/180*")

    for i in input:
        if i=='üîú':
            if brackets>0:
                output+=')'*brackets
            break
        if i=='‚àö':
            if previous_sym.isnumeric():    
                output += '*'
            output += 'sqrt('
            brackets += 1
            continue
        if brackets > 0 and not(i<='9' and i>='0' or (i=='i' and previous_sym!='s') or i==')'):
            brackets -= 1
            output += ')' + i
            continue

        # –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —É–º–Ω–æ–∂–µ–Ω–∏—è —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π –±–µ–∑ *
        if previous_sym.isnumeric() and (i == 's' or i == 'c' or i == 't' or i == 'e' or i=='p'):
            output += '*'

        output += i # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–∏–º–≤–æ–ª–∞ –∏–∑ input –≤ output
        previous_sym = i # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–∏–º–≤–æ–ª–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π

    try:
        print(output) # –¢–µ—Å—Ç–æ–≤—ã–π –≤—ã–≤–æ–¥ output
        return str(round(eval(output), 9)) # –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ —Ä–µ—à—ë–Ω–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è, —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –∫ 10 * 10^-9 
                                      # –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã c 0.5000000000000001
    except:
        return '–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ ' + input[0:-1] # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ


@eel.expose
def change_config(URL):
    open("web\config.txt", "w").write(URL)

def start_program(URL):
    eel.init("web") # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–ø–∫–∏ —Å –≤—ë—Ä—Å—Ç–∫–æ–π
    eel.start(f"{URL}", # –°—Ç–∞—Ä—Ç –æ–∫–Ω–∞
            size=(420, 720),
            port=8000)

def main():
    start_program(open("web\config.txt", "rt").read())

if __name__ == "__main__":
    main()

